riml_include 'spec_helper'
riml_include 'container'
riml_include 'command_registry'
riml_include 'buffer'
riml_include 'project'
riml_include 'buffer_collection'
riml_include 'project_collection'
riml_include 'codex_search_command'
riml_include 'with_dir'

class CodexSearchCommandSpec
  defm before_each
    self.container = new Container({})
    self.container.register('project', 'Project', false)
    self.container.register('buffer_collection', 'BufferCollection', true)
    self.container.register('project_collection', 'ProjectCollection', true)
    self.container.register('with_dir', 'WithDir', false)
    self.command = new CodexSearchCommand(self.container)

    self.project_collection = self.container.lookup('project_collection')
    self.buffer_collection = self.container.lookup('buffer_collection')
  end

  defm it_has_ex_mode
    expect(self.command.has_ex_mode()).to_be_true()
  end

  defm it_accepts_ranges
    expect(self.command.get_range()).to_be_true()
  end

  defm it_auto_registers
    expect(self.command.get_auto_register()).to_be_true()
  end

  defm it_knows_if_open_browser_is_present
    :delcommand OpenBrowser
    :command! -nargs=* OpenBrowser echo('OpenBrowser')
    expect(self.command.has_open_browser()).to_be_true()
  end

  defm it_knows_if_open_browser_is_absent
    :delcommand OpenBrowser
    expect(self.command.has_open_browser()).to_be_false()
  end

  defm it_can_build_codex_query
    expect(self.command.get_codex_query('foo')).to_match("http://wordpress.org/search")
    expect(self.command.get_codex_query('foo')).to_match("foo")
  end
end

