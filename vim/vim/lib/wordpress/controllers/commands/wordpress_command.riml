riml_include 'base_command'

class WordPressCommand < BaseCommand
  def initialize(container)
    super()
    self.container = container
  end

  defm lookup(key)
    return self.container.lookup(key)
  end

  defm process(*args)
    registry = self.lookup('registry')
    return call(registry['run_action'], args, registry)
  end

  defm current_buffer
    return self.lookup('buffer_collection').get_current()
  end

  defm current_buffer_full_path
    return self.current_buffer().get_full_path()
  end

  defm current_buffer_project_path
    return self.current_buffer().get_project_path()
  end

  defm current_project
    return self.lookup('project_collection').project_for(self.current_buffer_project_path())
  end

  defm expand_args(args)
    n      = len(args)
    opts   = args[n - 1]
    params = args[0:-2]

    return [params, opts]
  end

  defm get_current_word(params, opts)
    if len(params) > 0
      word = join(params, ' ')
    elseif has_key(opts, 'range')
      word = self.get_selected_text()
    else
      word = expand("<cword>")
    end

    return word
  end

  " code below by @xolox
  " http://stackoverflow.com/questions/1533565/how-to-get-visually-selected-text-in-vimscript
  defm get_selected_text
    [lnum1, col1] = getpos("'<")[1:2]
    [lnum2, col2] = getpos("'>")[1:2]
    lines = getline(lnum1, lnum2)
    lines[-1] = lines[-1][: col2 - (&selection == 'inclusive' ? 1 : 2)]
    lines[0] = lines[0][col1 - 1:]
    return join(lines, "\n")
  end

  defm get_current_line
    return getline(line('.'))
  end

  " TODO: move into utility
  defm is_false(value)
    return type(value) == type(false) && value == false
  end

  defm is_true(value)
    return type(value) == type(false) && value == true
  end
end
