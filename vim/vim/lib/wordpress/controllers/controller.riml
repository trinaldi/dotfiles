" portkey libs
riml_include 'container'
riml_include 'command_registry'

" utils
riml_include 'with_dir'
riml_include 'file_opener'
riml_include 'tags_option'
riml_include 'tag_list_matcher'
riml_include 'choice_prompter'
riml_include 'wpseek_api'
riml_include 'hook_match'
riml_include 'hook_matcher'
riml_include 'readme_validator'

" collections
riml_include 'buffer_collection'
riml_include 'project_collection'

" commands
riml_include 'change_current_buffer_command'
riml_include 'configure_buffer_command'
riml_include 'load_syntax_command'
riml_include 'load_project_registry_command'
riml_include 'configure_tags_command'
riml_include 'codex_search_command'
riml_include 'goto_definition_command'
riml_include 'load_mappings_command'
riml_include 'similar_functions_command'
riml_include 'similar_topics_command'
riml_include 'wp_action_command'
riml_include 'wp_filter_command'
riml_include 'validate_readme_command'
riml_include 'readme_auto_validator_command'

class Controller
  def initialize
    self.container = new Container({})
  end

  defm process(*args)
    registry = self.container.lookup('registry')
    return call(registry['run_action'], args, registry)
  end

  defm load
    self.configure_container()

    " commands
    self.load_commands()
  end

  defm configure_container
    c = self.container

    c.register('registry', 'CommandRegistry', true)
    c.register('buffer_collection', 'BufferCollection', true)
    c.register('project_collection', 'ProjectCollection', true)

    c.register('project', 'Project', false)
    c.register('with_dir', 'WithDir', false)
    c.register('file_opener', 'FileOpener', false)
    c.register('tags_option', 'TagsOption', true)
    c.register('tag_list_matcher', 'TagListMatcher', true)
    c.register('choice_prompter', 'ChoicePrompter', true)
    c.register('wpseek_api', 'WpSeekApi', true)
    c.register('hook_match', 'HookMatch', false)
    c.register('hook_matcher', 'HookMatcher', true)
    c.register('readme_validator', 'ReadmeValidator', true)
  end

  " initialization helpers
  defm load_commands
    c = self.container
    r = c.lookup('registry')

    r.add(new ConfigureBufferCommand(c))
    r.add(new ChangeCurrentBufferCommand(c))
    r.add(new LoadSyntaxCommand(c))
    r.add(new LoadProjectRegistryCommand(c))
    r.add(new ConfigureTagsCommand(c))
    r.add(new CodexSearchCommand(c))
    r.add(new GotoDefinitionCommand(c))
    r.add(new LoadMappingsCommand(c))
    r.add(new SimilarFunctionsCommand(c))
    r.add(new SimilarTopicsCommand(c))
    r.add(new WpActionCommand(c))
    r.add(new WpFilterCommand(c))
    r.add(new ValidateReadmeCommand(c))
    r.add(new ReadmeAutoValidatorCommand(c))
  end

  defm lookup(key)
    return self.container.lookup(key)
  end
end
