riml_include 'spec_helper'
riml_include 'container'
riml_include 'command_registry'
riml_include 'buffer'
riml_include 'project'
riml_include 'buffer_collection'
riml_include 'project_collection'
riml_include 'wordpress_command'
riml_include 'wordpress_project_command'
riml_include 'with_dir'

class WordpressProjectCommandSpec
  defm before_each
    self.container = new Container({})
    self.container.register('project', 'Project', false)
    self.container.register('buffer_collection', 'BufferCollection', true)
    self.container.register('project_collection', 'ProjectCollection', true)
    self.container.register('with_dir', 'WithDir', false)
    self.command = new WordPressProjectCommand(self.container)

    self.project_collection = self.container.lookup('project_collection')
    self.buffer_collection = self.container.lookup('buffer_collection')
  end

  defm it_can_lookup_objects_via_current_project_container
    buffer = new Buffer("#{g:WORDPRESS_DIR}/wp-load.php")
    self.buffer_collection.set_current(buffer)
    self.project_collection.add(buffer.get_project_path())

    self.container.register('foo', { 'value': 'foo-in-parent'}, true)

    project = self.command.current_project()
    project.container.register('foo', { 'value': 'foo-in-project'}, true)

    expect(self.command.lookup('foo').value).to_equal('foo-in-project')
  end

  defm it_can_lookup_objects_in_parent_container
    buffer = new Buffer("#{g:WORDPRESS_DIR}/wp-load.php")
    self.buffer_collection.set_current(buffer)
    self.project_collection.add(buffer.get_project_path())

    self.container.register('foo', { 'value': 'foo-in-parent'}, true)

    expect(self.command.lookup('foo').value).to_equal('foo-in-parent')
  end
end
